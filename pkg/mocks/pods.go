// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DelineaXPM/dsv-k8s-sidecar/pkg/pods (interfaces: PodRegistry)

// Package mocks is a generated GoMock package.
package mocks

import (
	v1 "github.com/ericchiang/k8s/apis/core/v1"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockPodRegistry is a mock of PodRegistry interface
type MockPodRegistry struct {
	ctrl     *gomock.Controller
	recorder *MockPodRegistryMockRecorder
}

// MockPodRegistryMockRecorder is the mock recorder for MockPodRegistry
type MockPodRegistryMockRecorder struct {
	mock *MockPodRegistry
}

// NewMockPodRegistry creates a new mock instance
func NewMockPodRegistry(ctrl *gomock.Controller) *MockPodRegistry {
	mock := &MockPodRegistry{ctrl: ctrl}
	mock.recorder = &MockPodRegistryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockPodRegistry) EXPECT() *MockPodRegistryMockRecorder {
	return m.recorder
}

// Done mocks base method
func (m *MockPodRegistry) Done() {
	m.ctrl.Call(m, "Done")
}

// Done indicates an expected call of Done
func (mr *MockPodRegistryMockRecorder) Done() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Done", reflect.TypeOf((*MockPodRegistry)(nil).Done))
}

// Get mocks base method
func (m *MockPodRegistry) Get(arg0 string) *v1.Pod {
	ret := m.ctrl.Call(m, "Get", arg0)
	ret0, _ := ret[0].(*v1.Pod)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockPodRegistryMockRecorder) Get(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockPodRegistry)(nil).Get), arg0)
}
