// Code generated by protoc-gen-go. DO NOT EDIT.
// source: bambe.proto

package secrets

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Secret struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Type                 string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	Attributes           string   `protobuf:"bytes,4,opt,name=attributes,proto3" json:"attributes,omitempty"`
	Value                string   `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Secret) Reset()         { *m = Secret{} }
func (m *Secret) String() string { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()    {}
func (*Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor_8fb48c35663d7dd6, []int{0}
}

func (m *Secret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Secret.Unmarshal(m, b)
}
func (m *Secret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Secret.Marshal(b, m, deterministic)
}
func (m *Secret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Secret.Merge(m, src)
}
func (m *Secret) XXX_Size() int {
	return xxx_messageInfo_Secret.Size(m)
}
func (m *Secret) XXX_DiscardUnknown() {
	xxx_messageInfo_Secret.DiscardUnknown(m)
}

var xxx_messageInfo_Secret proto.InternalMessageInfo

func (m *Secret) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Secret) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Secret) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Secret) GetAttributes() string {
	if m != nil {
		return m.Attributes
	}
	return ""
}

func (m *Secret) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Secret)(nil), "secrets.Secret")
}

func init() { proto.RegisterFile("bambe.proto", fileDescriptor_8fb48c35663d7dd6) }

var fileDescriptor_8fb48c35663d7dd6 = []byte{
	// 162 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x4a, 0xcc, 0x4d,
	0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4e, 0x4d, 0x2e, 0x4a, 0x2d, 0x29,
	0x56, 0x2a, 0xe3, 0x62, 0x0b, 0x06, 0x33, 0x85, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15,
	0x18, 0x35, 0x38, 0x83, 0x98, 0x32, 0x53, 0x84, 0x84, 0xb8, 0x58, 0x0a, 0x12, 0x4b, 0x32, 0x24,
	0x98, 0xc0, 0x22, 0x60, 0x36, 0x48, 0xac, 0xa4, 0xb2, 0x20, 0x55, 0x82, 0x19, 0x22, 0x06, 0x62,
	0x0b, 0xc9, 0x71, 0x71, 0x25, 0x96, 0x94, 0x14, 0x65, 0x26, 0x95, 0x96, 0xa4, 0x16, 0x4b, 0xb0,
	0x80, 0x65, 0x90, 0x44, 0x84, 0x44, 0xb8, 0x58, 0xcb, 0x12, 0x73, 0x4a, 0x53, 0x25, 0xd8, 0xc0,
	0x52, 0x10, 0x8e, 0x91, 0x19, 0x17, 0x73, 0x4a, 0x71, 0x99, 0x90, 0x3e, 0x17, 0xa7, 0x7b, 0x6a,
	0x09, 0xd4, 0x05, 0xfc, 0x7a, 0x50, 0x57, 0xe9, 0x41, 0x04, 0xa4, 0xd0, 0x05, 0x94, 0x18, 0x92,
	0xd8, 0xc0, 0xee, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x41, 0xf7, 0x6a, 0xce, 0x00,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DsvClient is the client API for Dsv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DsvClient interface {
	GetSecret(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*Secret, error)
}

type dsvClient struct {
	cc *grpc.ClientConn
}

func NewDsvClient(cc *grpc.ClientConn) DsvClient {
	return &dsvClient{cc}
}

func (c *dsvClient) GetSecret(ctx context.Context, in *Secret, opts ...grpc.CallOption) (*Secret, error) {
	out := new(Secret)
	err := c.cc.Invoke(ctx, "/secrets.dsv/GetSecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DsvServer is the server API for Dsv service.
type DsvServer interface {
	GetSecret(context.Context, *Secret) (*Secret, error)
}

func RegisterDsvServer(s *grpc.Server, srv DsvServer) {
	s.RegisterService(&_Dsv_serviceDesc, srv)
}

func _Dsv_GetSecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Secret)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DsvServer).GetSecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/secrets.dsv/GetSecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DsvServer).GetSecret(ctx, req.(*Secret))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dsv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "secrets.dsv",
	HandlerType: (*DsvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSecret",
			Handler:    _Dsv_GetSecret_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bambe.proto",
}
