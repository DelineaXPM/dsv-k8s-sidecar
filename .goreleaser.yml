---
version: 2
project_name: dsv-k8s-sidecar
dist: .artifacts
env:
  - GITHUB_TOKEN=''
  - GITLAB_TOKEN=''
  - GITEA_TOKEN=''
  - LOCAL_DEBUGGING=false # set to make this quick and bypass extra effort builds like archiving zip
  - CGO_ENABLED=0
before:
  hooks:
    - go mod download
builds:
  - id: dsv-controller
    binary: dsv-controller
    main: ./cmd/controller/main.go
    mod_timestamp: '{{ .CommitTimestamp }}'
    ldflags:
      - -s -w
      - -X main.version={{ .Summary }}
      - -X main.commit={{ .FullCommit }}
      - -X main.date={{ .Timestamp }}
      - -X main.builtBy=goreleaser
    goos: [linux]
    goarch: [amd64]

  - id: dsv-k8s-sidecar
    binary: dsv-k8s-sidecar
    main: ./cmd/client/main.go
    mod_timestamp: '{{ .CommitTimestamp }}'
    ldflags:
      - -s -w
      - -X main.version={{ .Summary }}
      - -X main.commit={{ .FullCommit }}
      - -X main.date={{ .Timestamp }}
      - -X main.builtBy=goreleaser
    goos: [linux]
    goarch: [amd64]

archives:
  - id: binary
    format: binary

checksum:
  name_template: checksums.txt
  algorithm: sha256
  disable: false
snapshot:
  name_template: '{{ incpatch .Version }}-next'
changelog:
  disable: true
  sort: asc
  use: github
  groups:
    - title: Features
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: 'Fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: 'CI & Chore'
      regexp: "^.*(fix|chore|build)[(\\w)]*:+.*$"
      order: 2
    - title: Others
      order: 999
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^style:'
sboms:
  - artifacts: binary
    documents:
      - '${artifact}.spdx.sbom'
dockers:
  - id: docker-publish-controller
    ids: [dsv-controller]
    goos: linux
    image_templates:
      - '{{ if index .Env "DOCKER_ORG" }}{{ .Env.DOCKER_ORG }}/dsv-k8s-controller:{{ .Version }}{{ end }}'
      - '{{ if index .Env "DOCKER_ORG" }}{{ .Env.DOCKER_ORG }}/dsv-k8s-controller:latest{{ end }}'
      - 'dev.local/dsv-k8s-controller:latest'
    skip_push: false
    dockerfile: ./docker/Dockerfile.controller
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.version={{.Version}}
  - id: docker-publish-client
    ids: [dsv-k8s-sidecar]
    goos: linux
    image_templates:
      - '{{ if index .Env "DOCKER_ORG" }}{{ .Env.DOCKER_ORG }}/dsv-k8s-sidecar:{{ .Version }}{{ end }}'
      - '{{ if index .Env "DOCKER_ORG" }}{{ .Env.DOCKER_ORG }}/dsv-k8s-sidecar:latest{{ end }}'
    skip_push: false
    dockerfile: ./docker/Dockerfile.sidecar
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.version={{.Version}}

  # local builds
  - id: local-docker-images-controller
    ids: [dsv-controller]
    goos: linux
    image_templates:
      - 'dev.local/dsv-k8s-controller:{{ .Version }}'
      - 'dev.local/dsv-k8s-controller:latest' # This one is for dev usage so latest version, no tagged semver required in docker compose or local testing

    skip_push: true
    dockerfile: ./docker/Dockerfile.controller
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.version={{.Version}}

  # local builds
  - id: local-docker-images-client
    ids: [dsv-k8s-sidecar]
    goos: linux
    image_templates:
      - 'dev.local/dsv-k8s-sidecar:{{ .Version }}'
      - 'dev.local/dsv-k8s-sidecar:latest' # This one is for dev usage so latest version, no tagged semver required in docker compose or local testing
    skip_push: true
    dockerfile: ./docker/Dockerfile.sidecar
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.title={{ .ProjectName }}
      - --label=org.opencontainers.image.revision={{ .FullCommit }}
      - --label=org.opencontainers.image.version={{.Version}}
